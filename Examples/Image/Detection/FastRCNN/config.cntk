RootDir = "."
ConfigDir = "$RootDir$"
DataDir = "$ConfigDir$/data/"
OutputDir = "D:"
ModelDir = "D:"

ndlMacros="$ConfigDir$/Macros.ndl"

precision="float"
deviceId="Auto"
parallelTrain="false"
command=StageTransition:Train2
#Train

#
traceLevel=1
numMBsToShowResult=1

FinalModel = "AlexNet.rcnn.momentumtest.allim.pad"

# dimension variables; used here and in MEL files.
TestROIDim = 8000
TestROILabelDim = 42000

TrainROIDim = 256 
TrainROILabelDim = 1344
LabelDim = 21

AddROILayer=[
    action="edit"
    CurModel="$ConfigDir$/AlexNet.89"
    NewModel="$ModelDir$/$FinalModel$.0"
    editPath="$ConfigDir$/AddROILayer.mel"
]

JustLast=[
    action="edit"
    CurModel="$ModelDir$/$FinalModel$.0"
    NewModel="$ModelDir$/$FinalModel$.0"
    editPath="$ConfigDir$/JustLast.mel"
]

StageTransition=[
    action="edit"
    CurModel="$ModelDir$/$FinalModel$.1"
    NewModel="$ModelDir$/$FinalModel$_stage2.0"
    editPath="$ConfigDir$/StageTransition.mel"
]


ChangeInputSize=[
    action="edit"
    NewHeight = 1000
    NewWidth = 1000
    CurModel="$ModelDir$/$FinalModel$.0"
    NewModel="$ModelDir$/$FinalModel$.0"
    editPath="$ConfigDir$/ChangeInputSize.mel"
]

FixForTest=[
    action="edit"
    CurModel="$ModelDir$/$FinalModel$"
    NewModel="$ModelDir$/$FinalModel$.test"
    editPath="$ConfigDir$/FixForTest.mel"
]

Train2=[
    action="train"

    modelPath="$ModelDir$/$FinalModel$_stage2"
    NDLNetworkBuilder=[
        networkDescription="$ConfigDir$/AlexNet.ndl"
    ]
    
    SGD=[
        epochSize=0
        minibatchSize=2
        learningRatesPerMB=0.0001
        momentumAsTimeConstant=1215
        maxEpochs=2
        gradUpdateType=None
        L2RegWeight=0.0005
        dropoutRate=0.5
        
        ParallelTrain=[
            parallelizationMethod="DataParallelSGD"
            distributedMBReading="true"
            parallelizationStartEpoch=1
            DataParallelSGD=[
                gradientBits=32
            ]
        ]
        
        numMBsToShowResult=50

    ]
    reader=[
        randomize = false
        verbosity = 2
        deserializers = (
        [
            type = "CNTKTextFormatDeserializer"
            module = "CNTKTextFormatReader"
            file = "$DataDir$/1k_train_stage2.rois.txt"
            input = [
                rois = [
                    dim = $TrainROIDim$
                    format = "dense"
                ]
            ]
        ]:[
            type = "CNTKTextFormatDeserializer"
            module = "CNTKTextFormatReader"
            file = "$DataDir$/1k_train_stage2.roilabels.txt"
            input = [
                roiLabels = [
                    dim = $TrainROILabelDim$
                    format = "dense"
                ]
            ]
        ]:[
            type = "ImageDeserializer"
            module = "ImageReader"
            file="$DataDir$/1k_train_stage2.txt"
            input = [
                features = [
                transforms = (
		[  
			type = "ScaleSide"
			target = 1000
			side = "max"
		   ]:[
                        type = "Pad"
                        width = 1000
                        height = 1000
                        channels = 3
                        value = 114
                    ]:[
                        type = "Mean"
                        # Stores mean values for each pixel in OpenCV matrix XML format.
                        meanFile = "$ConfigDir$/ImageNet500_mean.xml"
                    ]:[
                        # Changes the image layout from HWC to CHW
                        type = "Transpose"
                    ]
                )
                ]
                ignored=[
                    labelDim=1000
                ]
            ]
        ]
        )
    ]
]

Train=[
    action="train"

    modelPath="$ModelDir$/$FinalModel$"
    NDLNetworkBuilder=[
        networkDescription="$ConfigDir$/AlexNet.ndl"
    ]
    
    SGD=[
        epochSize=0
        minibatchSize=2
        learningRatesPerMB=0.0005*2:0.0001
	momentumAsTimeConstant=1215
        maxEpochs=3
        gradUpdateType=None
        L2RegWeight=0.0005
        dropoutRate=0.5
        numMBsToShowResult=50

    ]
    reader=[
        randomize = false
        verbosity = 2
        deserializers = (
        [
            type = "CNTKTextFormatDeserializer"
            module = "CNTKTextFormatReader"
            file = "$DataDir$/1k_train_stage1.rois.txt"
            input = [
                rois = [
                    dim = $TrainROIDim$
                    format = "dense"
                ]
            ]
        ]:[
            type = "CNTKTextFormatDeserializer"
            module = "CNTKTextFormatReader"
            file = "$DataDir$/1k_train_stage1.roilabels.txt"
            input = [
                roiLabels = [
                    dim = $TrainROILabelDim$
                    format = "dense"
                ]
            ]
        ]:[
            type = "ImageDeserializer"
            module = "ImageReader"
            file="$DataDir$/1k_train_stage1.txt"
            input = [
                features = [
                transforms = (
		[  
			type = "ScaleSide"
			target = 1000
			side = "max"
		   ]:[
                        type = "Pad"
                        width = 1000
                        height = 1000
                        channels = 3
                        value = 114
                    ]:[
                        type = "Mean"
                        # Stores mean values for each pixel in OpenCV matrix XML format.
                        meanFile = "$ConfigDir$/ImageNet1000_mean.xml"
                    ]:[
                        # Changes the image layout from HWC to CHW
                        type = "Transpose"
                    ]
                )
                ]
                ignored=[
                    labelDim=1000
                ]
            ]
        ]
        )
    ]
]


Write=[
    action="write"
    modelPath="$ModelDir$/$FinalModel$.test"
    # Set minibatch size for testing.
    minibatchSize=8
    outputPath="$OutputDir$/newbprop4_stage1-1000-ep5"
    reader=[
        randomize = false
        verbosity = 2
        deserializers = (
        [
            type = "CNTKTextFormatDeserializer"
            module = "CNTKTextFormatReader"
            file = "$DataDir$/1k_test_2krois.rois.txt"
            input = [
                rois = [
                    dim = $TestROIDim$
                    format = "dense"
                ]
            ]
        ]:[
            type = "CNTKTextFormatDeserializer"
            module = "CNTKTextFormatReader"
            file = "$DataDir$/1k_test_2krois.roilabels.txt"
            input = [
                roiLabels = [
                    dim = $TestROILabelDim$
                    format = "dense"
                ]
            ]
        ]:[
            type = "ImageDeserializer"
            module = "ImageReader"
            file="$DataDir$/1k_test_2krois.txt"
            input = [
                features = [
                transforms = (
		[
		        type = "ScaleSide"
			target = 1000
			side = "max"
                    ]:[
			type = "Pad"
			width=1000
			height=1000
			channels=3
			value=0
		    ]:[
                        # Changes the image layout from HWC to CHW
                        type = "Transpose"
                    ]
                )
                ]
                ignored=[
                    labelDim=1000
                ]
            ]
        ]
        )
    ]

    #outputNodeNames = (features)
]
